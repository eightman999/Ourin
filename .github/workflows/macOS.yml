name: macOS CI (xcodebuild test)

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: macos-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: macos-14   # 安定を取るなら固定。最新に追随するなら macos-latest でもOK
    timeout-minutes: 60

    env:
      XCODE_VERSION: latest-stable   # 必要なら "16.4" などピン留め推奨
      PROJECT_PATH: Ourin/Ourin.xcodeproj
      SCHEME: Ourin
      RESULT_BUNDLE: TestResults.xcresult

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Show toolchain
        run: |
          xcodebuild -version
          swift --version
          system_profiler SPSoftwareDataType | grep "System Version" || true
          uname -m

      - name: Cache SwiftPM
        uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm/cache
            ~/Library/Caches/org.swift.swiftpm
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Resolve dependencies
        run: |
          # SwiftPM併用プロジェクトなら先に解決（Xcodeのみならスキップ可）
          swift package resolve || true

      - name: Install xcbeautify (pretty logs)
        run: |
          brew update >/dev/null
          brew install xcbeautify

      - name: Build & Test (macOS)
        shell: bash
        run: |
          set -eo pipefail
          if [[ "$(uname -m)" == "arm64" ]]; then
            DEST="platform=macOS,arch=arm64"
          else
            DEST="platform=macOS,arch=x86_64"
          fi
          xcodebuild \
            -project "$PROJECT_PATH" \
            -scheme "$SCHEME" \
            -destination "$DEST" \
            -enableCodeCoverage YES \
            -resultBundlePath "$RESULT_BUNDLE" \
            CODE_SIGNING_ALLOWED=NO \
            test | tee xcodebuild.log | xcbeautify

      - name: Upload test result bundle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RESULT_BUNDLE }}
          path: ${{ env.RESULT_BUNDLE }}

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcodebuild.log
          path: xcodebuild.log
