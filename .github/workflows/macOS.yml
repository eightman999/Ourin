name: macOS CI (xcodebuild test)

on:
  pull_request:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: macos-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: macos-14
    timeout-minutes: 60

    env:
      XCODE_VERSION: latest-stable
      SCHEME: Ourin
      RESULT_BUNDLE: TestResults.xcresult

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Show toolchain
        run: |
          xcodebuild -version
          swift --version
          uname -m

      - name: Cache SwiftPM
        uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm/cache
            ~/Library/Caches/org.swift.swiftpm
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Resolve dependencies (optional)
        run: |
          swift package resolve || true

      - name: Install xcbeautify
        run: |
          brew update >/dev/null
          brew install xcbeautify

      - name: Show repo tree (depth 2)
        run: |
          pwd
          find . -maxdepth 2 -type d -name "*.xcodeproj" -print
          find . -maxdepth 2 -type d -name "*.xcworkspace" -print

      - name: Detect Xcode container (project/workspace)
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          WS=$(find . -maxdepth 3 -name "*.xcworkspace" | head -n 1 || true)
          PRJ=$(find . -maxdepth 3 -name "*.xcodeproj"   | head -n 1 || true)
          if [[ -n "$WS" ]]; then
            echo "type=workspace" >> "$GITHUB_OUTPUT"
            echo "path=$WS"       >> "$GITHUB_OUTPUT"
            echo "Detected workspace: $WS"
          elif [[ -n "$PRJ" ]]; then
            echo "type=project"   >> "$GITHUB_OUTPUT"
            echo "path=$PRJ"      >> "$GITHUB_OUTPUT"
            echo "Detected project: $PRJ"
          else
            echo "No .xcworkspace or .xcodeproj found"; exit 66
          fi

      - name: List schemes
        run: |
          if [[ "${{ steps.detect.outputs.type }}" == "workspace" ]]; then
            xcodebuild -list -workspace "${{ steps.detect.outputs.path }}"
          else
            xcodebuild -list -project "${{ steps.detect.outputs.path }}"
          fi

      - name: Build & Test (macOS)
        shell: bash
        run: |
          set -eo pipefail
          if [[ "$(uname -m)" == "arm64" ]]; then
            DEST="platform=macOS,arch=arm64"
          else
            DEST="platform=macOS,arch=x86_64"
          fi

          if [[ "${{ steps.detect.outputs.type }}" == "workspace" ]]; then
            xcodebuild \
              -workspace "${{ steps.detect.outputs.path }}" \
              -scheme "${SCHEME}" \
              -destination "$DEST" \
              -enableCodeCoverage YES \
              -resultBundlePath "${RESULT_BUNDLE}" \
              CODE_SIGNING_ALLOWED=NO \
              test | tee xcodebuild.log | xcbeautify
          else
            xcodebuild \
              -project "${{ steps.detect.outputs.path }}" \
              -scheme "${SCHEME}" \
              -destination "$DEST" \
              -enableCodeCoverage YES \
              -resultBundlePath "${RESULT_BUNDLE}" \
              CODE_SIGNING_ALLOWED=NO \
              test | tee xcodebuild.log | xcbeautify
          fi

      - name: Upload test result bundle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RESULT_BUNDLE }}
          path: ${{ env.RESULT_BUNDLE }}

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcodebuild.log
          path: xcodebuild.log
