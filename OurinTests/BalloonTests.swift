import Foundation
import Testing
@testable import Ourin

struct BalloonTests {
    @Test func descriptorOverlay() async throws {
        let dir = URL(fileURLWithPath: #file).deletingLastPathComponent().appendingPathComponent("Fixtures")
        let desc = try DescriptorLoader.load(from: dir)
        #expect(desc["foo"] == "baz")
    }

    @Test func icoDecode() async throws {
        // 1x1px の最小 ICO ファイルをバイト列として埋め込む
        let bytes: [UInt8] = [
            0x00,0x00,0x01,0x00,0x01,0x00,0x01,0x01,0x00,0x00,0x01,0x00,0x20,0x00,0x30,0x00,
            0x00,0x00,0x16,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x02,0x00,
            0x00,0x00,0x01,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0xff,0xff,0x00,0x00,0x00,0x00
        ]
        let data = Data(bytes)
        // 一時ファイルに書き出して ImageLoader をテスト
        let tmp = URL(fileURLWithPath: NSTemporaryDirectory()).appendingPathComponent("test.ico")
        try data.write(to: tmp)
        defer { try? FileManager.default.removeItem(at: tmp) }
        let img = try ImageLoader.load(url: tmp)
        #expect(img.width == 1)
        #expect(img.height == 1)
    }
}
